from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message

from filter.admin_filter import check_admin
from filter.user_filter import check_user
from module.data_base import create_table_users, add_super_admin
from keyboards.keyboards_admin import keyboards_super_admin_v1, keyboards_manager_v1, keyboard_personal_admin, \
    keyboard_personal_manager
from keyboards.keyboard_sales import keyboard_report_admin, keyboard_report_manager
from config_data.config import Config, load_config

import requests
import logging

router = Router()
config: Config = load_config()


def get_telegram_user(user_id, bot_token):
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–≥–æ —á—Ç–æ –±–æ—Ç –∑–Ω–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param user_id:
    :param bot_token:
    :return:
    """
    url = f'https://api.telegram.org/bot{bot_token}/getChat'
    data = {'chat_id': user_id}
    response = requests.post(url, data=data)
    return response.json()


@router.message(CommandStart(), lambda message: check_admin(message.chat.id))
async def process_start_command_admin(message: Message) -> None:
    logging.info("process_start_command")
    """
    –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    :param message: 
    :return: 
    """
    create_table_users()
    add_super_admin(id_admin=message.chat.id, user_name=message.from_user.username)
    # —Å—Ç–∏–∫–µ—Ä –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –±–æ—Ç–∞ @PROSOFT_ManagerBot, —Å–Ω—è—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø—Ä–∏ –ø—É—à–∏–Ω–≥–µ
    # await message.answer_sticker(sticker='CAACAgIAAxkBAAMGZdsqEf4QhJm2JYtIy9KrTYs8aBUAAtY8AAIbsthKlKy5IzD6RCM0BA')
    await message.answer(text=f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name} üëã\n"
                              f"–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ –∫–ª—é—á–∏, –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–º–µ–Ω—É –Ω–∞ –∫–ª—é—á–∏,"
                              f" –ø–æ–ª—É—á–∏—Ç—å –æ—Ç—á—ë—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–∞.",
                         reply_markup=keyboards_super_admin_v1())


@router.message(CommandStart(), lambda message: check_user(message.chat.id))
async def process_start_command_manager(message: Message) -> None:
    logging.info("process_start_command_manager")
    """
    –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
    :param message: 
    :return: 
    """
    create_table_users()
    # —Å—Ç–∏–∫–µ—Ä –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –±–æ—Ç–∞ @PROSOFT_ManagerBot, —Å–Ω—è—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø—Ä–∏ –ø—É—à–∏–Ω–≥–µ
    # await message.answer_sticker(sticker='CAACAgIAAxkBAAMGZdsqEf4QhJm2JYtIy9KrTYs8aBUAAtY8AAIbsthKlKy5IzD6RCM0BA')
    await message.answer(text=f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name} üëã\n"
                              f"–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ –∫–ª—é—á–∏, –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–º–µ–Ω—É –Ω–∞ –∫–ª—é—á–∏,"
                              f" –ø–æ–ª—É—á–∏—Ç—å –æ—Ç—á—ë—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–∞.",
                         reply_markup=keyboards_manager_v1())


@router.message(F.text == '–ü–µ—Ä—Å–æ–Ω–∞–ª')
async def process_personal(message: Message) -> None:
    logging.info(f'process_personal: {message.chat.id}')
    if check_admin(telegram_id=message.chat.id):
        await message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–µ–±—É–µ–º—ã–π —Ä–∞–∑–¥–µ–ª",
                             reply_markup=keyboard_personal_admin())


@router.message(F.text == '–ì—Ä–∞—Ñ–∏–∫')
async def process_personal(message: Message) -> None:
    logging.info(f'process_personal: {message.chat.id}')
    if check_user(telegram_id=message.chat.id):
        await message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–µ–±—É–µ–º—ã–π —Ä–∞–∑–¥–µ–ª",
                             reply_markup=keyboard_personal_manager())


@router.message(F.text == '–û—Ç—á–µ—Ç')
async def process_get_report(message: Message) -> None:
    """
    –ù–∞—á–∞–ª–æ —Ü–µ–ø–æ—á–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –≤—ã–±–æ—Ä–∞:
    1. –æ—Ç—á–µ—Ç–∞ –æ –ø—Ä–æ–¥–∞–∂–∞—Ö (–≤—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã–¥–∞–µ—Ç—Å—è –æ—Ç—á–µ—Ç –æ –ø—Ä–æ–¥–∞–∂–∞—Ö)
    –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä - –º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å –æ—Ç—á–µ—Ç –∑–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–ª–∏ –∫–æ–º–ø–∞–Ω–∏—é
    –ú–µ–Ω–µ–¥–∂–µ—Ä - –º–æ–∂–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—á–µ—Ç—ã —Ç–æ–ª—å–∫–æ –∑–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
    2. –æ—Ç—á–µ—Ç–∞ –æ –∑–∞–º–µ–Ω–∞—Ö –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å –æ—Ç—á–µ—Ç–æ–º –æ –ø—Ä–æ–¥–∞–∂–∞—Ö
    3. –æ—Ç—á–µ—Ç –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö –∫–ª—é—á–µ–π (–¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—É)
    :param message:
    :return:
    """
    logging.info(f'process_get_report: {message.chat.id}')
    if check_admin(telegram_id=message.chat.id):
        await message.answer(text="–û—Ç—á–µ—Ç –ø–æ –∫–∞–∫–æ–º—É —Ä–∞–∑–¥–µ–ª—É —Ç—Ä–µ–±—É–µ—Ç—Å—è?",
                             reply_markup=keyboard_report_admin())
    elif check_user(telegram_id=message.chat.id):
        await message.answer(text="–û—Ç—á–µ—Ç –ø–æ –∫–∞–∫–æ–º—É —Ä–∞–∑–¥–µ–ª—É —Ç—Ä–µ–±—É–µ—Ç—Å—è?",
                             reply_markup=keyboard_report_manager())